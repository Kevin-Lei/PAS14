Changes for ebaysdk

1.0.3
- rework unicode fix

1.0.2 Sat Feb  8 20:44:00 PST 2014
- fix unicode issue is dict to xml routine
- add a unicode test
- fix http back-end

1.0.0
- Major refactor
  + changes are backward compatible unless your subclassing any of the 
    SDK classes
  + moved from PyCurl to Python Requests
  + code organization
  + standard python logging
  + add exceptions

0.1.11
- Add affiliate headers to the Shopping API back-end
- https://github.com/timotheus/ebaysdk-python/issues/40
  fix datatype issue with error codes from the shopping API
  
- added py3 support thanks to Nikolay Derkach
- store response error codes in an array when processing response.
  The reponse error codes can be accessed by the api.response_codes()
  accessor.

  if api.error():
      if 37 in api.response_codes():
          print "Invalid data"

0.1.10
- added error checking for html() class
- all class return response_data regardless of the http status code
- added Merchandising API class
- update SOA class default value
- add more trading api samples

0.1.9 Wed Apr 24 14:38:40 PDT 2013
- update error handling
- add VerifyAddItem sample call
- update license in setup.py

0.1.8 Tue Apr 23 15:33:02 PDT 2013
- push dist to pypi
- fix deprecation warning in utils.py
- pep8 cleanup
- handle utf-8 when parsing with BeautifulStoneSoup
- add retry to standard & parallel calls
- bug fix for SOA class
- add documentation and sample scripts
- clean up YAML file
- YAML values are now overridden by values defined
  when building the object
- remove silent depedency on simplejson, at least for Python >= 2.6
- fix bug in html class that allows for POST 
- refactor and style cleanup
- added parallel support using the parallel class
- created new prepare, process, and _process_http_request methods

0.1.7
- update tests
- modify response_obj() to return response_dict()

0.0.6
- support older version of Element tree
- modify dict2xml to handle nodes with array content

for example,
{ 
    'keywords': 'shoes', 
    'paginationInput': { 'pageNumber': 1 }, 
    'itemFilter': [ 
        { 'name': 'MinBids', 'value': 10 }, 
        { 'name': 'MaxBids', 'value': 14 }
    ],
}
<?xml version='1.0' encoding='utf-8'?>
<findItemsAdvancedRequest xmlns="http://www.ebay.com/marketplace/search/v1/services">
<itemFilter><name>MinBids</name><value>10</value></itemFilter>
<itemFilter><name>MaxBids</name><value>14</value></itemFilter>
<keywords>shoes</keywords>
<paginationInput><pageNumber>1</pageNumber></paginationInput>
</findItemsAdvancedRequest>

0.0.5
- added response_obj() which turns a dict into a Struct
  e.g. { a : { 'name' : 'tim' } } can be accessed like a.name
- add support to dict args in the execute call. execute will now check the 
  data type and convert to xml if necessary
- clean doctests
    
0.0.4
- moved from httplib to pycurl
  * pycurl was chosen because of its https/proxy support and
    that it's thread-safe.

0.0.3 Wed May 11 11:03:58 PDT 2011
- fix escape username/password
- fix error handling
- cleanup doctests

0.0.2 Fri Aug 20 17:25:25 PDT 2010
- fix download link 

0.0.1 Initial Release

